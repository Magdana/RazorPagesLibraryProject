@page
@model RazorPagesLibraryProject.Pages.AllBooksPageModel
@{
}
@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="alert alert-info">@Model.Message</div>
}
<div class="books-ctn">
    <div class="search-title-cont">
        <div class="text-center">
            <h2>All Books</h2>
        </div>
        <form id="search-form" method="get">
            <input type="text" asp-for="SearchWord" class="form-control" placeholder="Enter the search word..." required />
            <button type="submit" value="Filter" class="add-btn">Search</button>
            <button type="button" class="add-btn" onclick="clearSearch()">Clear Search</button>
        </form>
    </div>
    @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
    {
        <div class="add-book">
            <h5>Add New Book</h5>
            <form method="post" asp-page-handler="AddBook" id="add-book-form" enctype="multipart/form-data">
                <input type="text" asp-for="NewBookName" class="form-control" placeholder="Book Name..." required />
                <input type="text" asp-for="NewBookAuthor" class="form-control" placeholder="Author..." required />
                <textarea asp-for="NewBookDescription" class="form-control" placeholder="Description..."></textarea>
                <input type="number" asp-for="NewBookInitialCount" class="form-control" placeholder="Number Of Books..." required min="1" />
                <select asp-for="NewBookGenreId" asp-items="Model.Genres" class="form-control" required>
                    <option value="">-- Select Genre --</option>
                </select>
                <input type="date" asp-for="NewBookIssueDate" class="form-control" required />
                <input type="file" name="NewBookImagePath" class="form-control" accept="image/*" required />
                <div class="add-clear-btns">
                    <button type="submit" class="add-btn">Add Book</button>
                    <button type="button" class="add-btn" onclick="clearForm()">Clear</button>
                </div>
            </form>

        </div>
    }

    <div class="books-list">
        <div class="listed-books">
            @foreach (var book in Model.Books)
            {
                <div class="book-ctn">
                    <a asp-page="/BookPage" asp-route-id="@book.Id">

                        <div class="book">
                            <div class="book-header">
                                <div class="book-image">
                                    <img src="@book.ImagePath" alt="@book.Name" />
                                </div>
                                <p class="book-nm">@book.Name</p>
                                <p class="book-at">@book.Author</p>
                            </div>
                        </div>
                    </a>

                </div>
            }
        </div>
    </div>
    <div class="pagination">
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Page navigation" id="page-pagination">
                <ul class="pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item"><a class="page-link" href="@Url.Action("AllBooksPage", new { pageNumber = 1, pageSize = Model.PageSize })">First</a></li>
                        <li class="page-item"><a class="page-link" href="@Url.Action("AllBooksPage", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })">Previous</a></li>
                    }

                    @{
                        int startPage = Model.CurrentPage - 2;
                        int endPage = Model.CurrentPage + 2;

                        if (startPage <= 0)
                        {
                            startPage = 1;
                            endPage = Math.Min(startPage + 10, Model.TotalPages);
                        }

                        if (endPage > Model.TotalPages)
                        {
                            endPage = Model.TotalPages;
                            startPage = Math.Max(endPage - 10, 1);
                        }

                        for (int pageNum = startPage; pageNum <= endPage; pageNum++)
                        {
                            <li class="page-item @(pageNum == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="AllBooksPage" asp-route-pageNumber="@pageNum" asp-route-pageSize="@Model.PageSize">@pageNum</a>
                            </li>
                        }
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item"><a class="page-link" href="@Url.Action("AllBooksPage", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a></li>
                        <li class="page-item"><a class="page-link" href="@Url.Action("AllBooksPage", new { pageNumber = Model.TotalPages, pageSize = Model.PageSize })">Last</a></li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>